{
	"info": {
		"_postman_id": "4504e1ae-49a7-481b-8e55-3dfe8d460432",
		"name": "easyshop - solo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18919939"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Registration should succeed\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"{{newUserName}}\",\r\n  \"password\": \"{{newUserPassword}}\",\r\n  \"confirmPassword\": \"{{newUserPassword}}\",\r\n  \"role\": \"USER\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login - new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"userToken\", pm.response.json().token);\r",
									"\r",
									"pm.test(\"User Login should create token\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.have.jsonBody(\"token\");\r",
									"    pm.expect(pm.environment.get(\"userToken\")).to.not.equal(\"\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"{{newUserName}}\",\r\n  \"password\": \"{{newUserPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login - as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"adminToken\", pm.response.json().token)\r",
									"\r",
									"pm.test(\"Admin Login should succeed\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"admin\",\r\n  \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "categoties",
			"item": [
				{
					"name": "user",
					"item": [
						{
							"name": "Get Categories",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var items = pm.response.json();\r",
											"\r",
											"pm.test(\"Categories should be \" + items.length, function() {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.expect(items.length).to.equal(3);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Categories - after add",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var items = pm.response.json();\r",
											"\r",
											"pm.test(\"Categories should be \" + items.length, function() {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.expect(items.length).to.equal(4);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get New Category By Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var name = pm.response.json().name;\r",
											"\r",
											"pm.test(\"Get new category by id should succeed\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.expect(name).to.equal(\"Demo\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categories/{{newCategoryId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"{{newCategoryId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Category By Id - after delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get new category after delete should not be found \", function() {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categories/{{newCategoryId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"{{newCategoryId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "New Request",
							"request": {
								"method": "GET",
								"header": []
							},
							"response": []
						}
					]
				},
				{
					"name": "admin",
					"item": [
						{
							"name": "Add Category - as admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"newCategoryId\", pm.response.json().categoryId)\r",
											"\r",
											"var name = pm.response.json().name;\r",
											"\r",
											"pm.test(\"Category insert as admin should succeed\", function() {\r",
											"    pm.response.to.have.status(201);\r",
											"    pm.expect(name).to.equal(\"Demo\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{admin-token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Demo\",\r\n    \"description\": \"Some demo category.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update category",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Update\",\r\n    \"description\": \"Update Some demo category.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categories/{{newCategoryId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"{{newCategoryId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete category - by categoryId",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categories/{{newCategoryId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"{{newCategoryId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "products",
			"item": [
				{
					"name": "Get all products - by categoryId",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Search product",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products?cat=1&minPrice=80&maxPrice=90",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "cat",
									"value": "1"
								},
								{
									"key": "minPrice",
									"value": "80"
								},
								{
									"key": "maxPrice",
									"value": "90"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create product",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Classi Leather Jacket\",\r\n  \"price\": 199.99,\r\n  \"categoryId\": 2,\r\n  \"description\": \"A timeless black leather jacket with a modern cut.\",\r\n  \"color\": \"Black\",\r\n  \"stock\": 42,\r\n  \"isFeatured\": true,\r\n  \"imageUrl\": \"https://cdn.exampl.com/products/123-main.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update product",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Classic Leather Jacket\",\r\n  \"price\": 199.99,\r\n  \"categoryId\": 2,\r\n  \"description\": \"A timeless black leather jacket with a modern cut.\",\r\n  \"color\": \"Black\",\r\n  \"stock\": 42,\r\n  \"isFeatured\": true,\r\n  \"imageUrl\": \"https://encrypted-tbn1.gstatic.com/shopping?q=tbn:ANd9GcRhWmeIZ35TJ6plNl5sIbf6ObD2u2CFipgarevGtgGSIL_Y71oOhO4Y0KjMt8I51NbTcZh88v0b5BCD_-ovJdj6PiV3KQ2LeawT57AMe5ZaXQgXzNYjLWx76Q\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/{{newProductId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"{{newProductId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete product",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{admin-token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "userToken",
			"value": "userToken",
			"type": "string"
		},
		{
			"key": "adminToken",
			"value": "adminToken",
			"type": "string"
		},
		{
			"key": "newCategoryId",
			"value": "3",
			"type": "string"
		},
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "newUserName",
			"value": "gary",
			"type": "string"
		},
		{
			"key": "newUserPassword",
			"value": "thePass",
			"type": "string"
		},
		{
			"key": "admin-token",
			"value": "",
			"type": "default"
		}
	]
}